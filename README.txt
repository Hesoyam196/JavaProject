	I. ПОДГОТОВКА НЕОБХОДИМОГО ФУНКЦИОНАЛА
1. Создание объектно-ориентированной структуры, для работы с CSV файлом "School".
	1.1 Создание класса School, с полями соответствующими столбцам CSV файла.
	А так же с их геттерами, сеттарами и toString.
	(Скриншот1.1.1)
	1.2 Создание класса SchoolParser, для считывания и CSV файла, и сохранения
	из него данных.
	(Скриншот1.1.2)
	1.3 Создание класса SchoolUtils, общего класса для работы над задачей.
	(Скриншот1.1.3)
2. Создание объектно-ориентированной структуры, для работы с БД "SQLite".
	2.1	Установка и импорт библиотеки sqlite-jdbc, для работы с "SQLite".
	2.2 Создание класса DBHandler, для взаимодействия с БД SQLite, с методами
	соответствующими функционалу для выполнения заданий (task1, task2, task3).
(Скриншот1.2)
3. Создание объектно-ориентированной структуры, для отрисовки данных согласно
заданию 1.
	3.1 Установка библиотеки jfreechart и импорт нужного функционала.
	3.2 Описание класса Draw для создания графика на основе данных задачи 1.
(Скриншот1.3)
4. Создание класса main, с соответствующим методом, в котором будут происходить
основыне действия.
(Скриншот1.4)

	II. ВЫПОЛНЕНИЕ ЗАДАНИЙ
1. Подготовка БД.
	1.1 Считывание данных из CSV файла в подготовленные классы
	1.2 Создание базы данных
	1.3 Создание таблицы представляющей считанные данные
	1.4 Наполнение таблицы считанными ранее данными.
(Скриншот2.1)
2. Выполнение задания 1.
	2.1 Возьмем случайные 10 стран из данных нашей таблицы
	2.2 Найдем для каждой из них среднее количество учеников в школе
	2.3 Передадим эти данные в заранее подготовленный метод отрисовки
	класса создания графика
	2.4 Получим необходимый график.
(Скриншот2.2(1))
(Скриншот2.2(2))
3. Выполнение задания 2.
	3.1 Выведем в консоль результат метода, подогтовленного для задания 2.
	(Скриншот2.3.1)
4. Выполнение задания 3.
	4.1 Выведем в консоль результат метода, подогтовленного для задания 3.
	(Скриншот2.4.1)

	III. Загружаем проект на Github.